version: '3.8'
services:
  temporal-postgresql:
    image: postgres:16
    container_name: temporal-postgresql
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
      POSTGRES_DB: temporal
    ports:
      - "5432:5432"
    networks:
      - temporal-network

  temporal:
    container_name: temporal
    image: temporalio/auto-setup:1.28.1
    ports:
      - "7233:7233"
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=temporal-postgresql
      - POSTGRES_DB=temporal
    networks:
      - temporal-network
    depends_on:
      - temporal-postgresql

  temporal-ui:
    container_name: temporal-ui
    image: temporalio/ui:2.34.0
    ports:
      - "8081:8080"
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    networks:
      - temporal-network
    depends_on:
      - temporal

  loki:
    image: grafana/loki:2.9.3
    ports:
      - "3100:3100"
    volumes:
      - ./loki-data:/loki
      - ./loki-config.yml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - temporal-network

  grafana:
    image: grafana/grafana:10.2.2
    ports:
      - "3000:3000"
    volumes:
      - ./provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - temporal-network
    depends_on:
      - loki

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    networks:
      - temporal-network
    depends_on:
      - temporal
      - loki
    command: python src/main.py
    restart: always 

networks:
  temporal-network:
    driver: bridge
